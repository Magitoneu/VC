function [ obs ] = getLookingObs( I )

% De moment: Busquem l'iris i donem distàncies als extrems de la imatge.
I = imresize(I, 5);
Io = histeq(I);
Io = imopen(Io, strel('disk', 6));
BW = (Io < 55);
BW = imfill(BW, 'holes');

[f, c] = size(BW);
center = [f/2 c/2];

CC = bwconncomp(BW);
props = regionprops(BW, 'Centroid', 'BoundingBox', 'Area');

distToCenter = ones([CC.NumObjects, 1]);

% Estem cercant per la regió connexa amb àrea decent que s'apropi més al
% centre.

for i = 1:CC.NumObjects
    if(props(i).Area > 500)
        distToCenter(i) = getDistance(props(i).Centroid, center);
    else
        distToCenter(i) = Inf;
    end
end

[~ ,idx] = min(distToCenter);
st = props(idx);

I2 = imadjust(I);
I2 = imgaussfilt(I2);
I2 = imopen(I2, strel('disk', 5));
I2 = imfill((I2 < 70), 'holes');
[centers, radii, metric] = imfindcircles(I2, [23 35], 'ObjectPolarity','bright', 'Method', 'TwoStage', 'Sensitivity', 0.90);
distToCenter = ones([size(centers, 1), 1]);

% Ara cerquem pel cercle d'iris dels 3 millors que ha trobat que s'apropi
% més al centre de la regió connexa que ens defineix la BB de l'ull.

if (size(centers, 1) == 0)
    obs = zeros(1, 7)
else
    for i = 1:min(size(centers, 1), 3)
        distToCenter(i) = getDistance(centers(i, :), st.Centroid);
    end

    [distanciaIrisCentroid, posCenter] = min(distToCenter);

    centerIris = centers(posCenter,:); 
    radiIris = radii(posCenter);
    metricIris = metric(posCenter);

    obs = [radiIris distanciaIrisCentroid getDistance(centerIris, st.BoundingBox(1)) ...
        getDistance(centerIris, st.BoundingBox(2)), getDistance(centerIris, s]
end
        
end
